<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.im.project.manager.UserMapper">
  <resultMap id="BaseResultMap" type="com.im.project.model.User">
    <id column="UserId" jdbcType="INTEGER" property="userId" />
    <result column="UserName" jdbcType="VARCHAR" property="userName" />
    <result column="Password" jdbcType="VARCHAR" property="password" />
    <result column="Picture" jdbcType="VARCHAR" property="picture" />
    <result column="Email" jdbcType="VARCHAR" property="email" />
    <result column="SchoolId" jdbcType="INTEGER" property="schoolid" />
    <result column="StudentNumber" jdbcType="INTEGER" property="studentnumber" />
  </resultMap>
  <sql id="Base_Column_List">
    UserId, UserName, Password, Picture, Email, SchoolId, StudentNumber
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    *
    from user
    where UserId = #{userid,jdbcType=INTEGER}
  </select>
  <!--通过固定条件查询-->
  <select id="findUser" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    *
    from user
    where UserName= #{0,jdbcType=VARCHAR} AND Password = #{1,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where UserId = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.im.project.model.User">
    insert into user (UserId, UserName, Password, 
      Picture, Email, SchoolId, 
      StudentNumber)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{picture,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{schoolid,jdbcType=INTEGER}, 
      #{studentnumber,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.im.project.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        UserId,
      </if>
      <if test="username != null">
        UserName,
      </if>
      <if test="password != null">
        Password,
      </if>
      <if test="picture != null">
        Picture,
      </if>
      <if test="email != null">
        Email,
      </if>
      <if test="schoolid != null">
        SchoolId,
      </if>
      <if test="studentnumber != null">
        StudentNumber,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="schoolid != null">
        #{schoolid,jdbcType=INTEGER},
      </if>
      <if test="studentnumber != null">
        #{studentnumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.im.project.model.User">
    update user
    <set>
      <if test="username != null">
        UserName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        Password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        Picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        Email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="schoolid != null">
        SchoolId = #{schoolid,jdbcType=INTEGER},
      </if>
      <if test="studentnumber != null">
        StudentNumber = #{studentnumber,jdbcType=INTEGER},
      </if>
    </set>
    where UserId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.im.project.model.User">
    update user
    set UserName = #{username,jdbcType=VARCHAR},
      Password = #{password,jdbcType=VARCHAR},
      Picture = #{picture,jdbcType=VARCHAR},
      Email = #{email,jdbcType=VARCHAR},
      SchoolId = #{schoolid,jdbcType=INTEGER},
      StudentNumber = #{studentnumber,jdbcType=INTEGER}
    where UserId = #{userid,jdbcType=INTEGER}
  </update>

  <select id="getUsers" resultMap="BaseResultMap">
    SELECT *
    FROM user
  </select>

  <select id="getUserByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT *
    FROM user
    WHERE UserName = #{userName,jdbcType=VARCHAR}
  </select>
</mapper>